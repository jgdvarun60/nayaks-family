package com.nayakfamily.familytree.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class FamilyAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFamilyAllPropertiesEquals(Family expected, Family actual) {
        assertFamilyAutoGeneratedPropertiesEquals(expected, actual);
        assertFamilyAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFamilyAllUpdatablePropertiesEquals(Family expected, Family actual) {
        assertFamilyUpdatableFieldsEquals(expected, actual);
        assertFamilyUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFamilyAutoGeneratedPropertiesEquals(Family expected, Family actual) {
        assertThat(expected)
            .as("Verify Family auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFamilyUpdatableFieldsEquals(Family expected, Family actual) {
        assertThat(expected)
            .as("Verify Family relevant properties")
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getMotherMaidenName()).as("check motherMaidenName").isEqualTo(actual.getMotherMaidenName()))
            .satisfies(e -> assertThat(e.getMarriageDate()).as("check marriageDate").isEqualTo(actual.getMarriageDate()))
            .satisfies(e -> assertThat(e.getFamilyPhoto()).as("check familyPhoto").isEqualTo(actual.getFamilyPhoto()))
            .satisfies(
                e ->
                    assertThat(e.getFamilyPhotoContentType())
                        .as("check familyPhoto contenty type")
                        .isEqualTo(actual.getFamilyPhotoContentType())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFamilyUpdatableRelationshipsEquals(Family expected, Family actual) {
        assertThat(expected)
            .as("Verify Family relationships")
            .satisfies(e -> assertThat(e.getFather()).as("check father").isEqualTo(actual.getFather()))
            .satisfies(e -> assertThat(e.getMother()).as("check mother").isEqualTo(actual.getMother()));
    }
}
